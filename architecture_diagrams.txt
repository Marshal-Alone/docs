# Architecture Diagrams for Collaborative Whiteboard

## 1. System Architecture Overview
```
┌─────────────────┐     ┌─────────────────┐     ┌─────────────────┐
│                 │     │                 │     │                 │
│  Client Browser │────▶│  Node.js Server │────▶│   MongoDB DB    │
│                 │     │                 │     │                 │
└─────────────────┘     └─────────────────┘     └─────────────────┘
        ▲                        ▲
        │                        │
        ▼                        ▼
┌─────────────────┐     ┌─────────────────┐
│                 │     │                 │
│  HTML5 Canvas   │     │  Socket.IO     │
│                 │     │                 │
└─────────────────┘     └─────────────────┘
```

## 2. Technology Stack Layers
```
┌─────────────────────────────────────────────────┐
│                  Frontend Layer                  │
├─────────────────────────────────────────────────┤
│  • HTML5 Canvas for Drawing                     │
│  • Custom CSS for Styling                       │
│  • JavaScript for Interactivity                 │
│  • Socket.IO Client for Real-time Updates       │
└─────────────────────────────────────────────────┘
                        ▲
                        │
┌─────────────────────────────────────────────────┐
│                  Backend Layer                   │
├─────────────────────────────────────────────────┤
│  • Node.js Runtime                              │
│  • Express.js Framework                         │
│  • Socket.IO Server                             │
│  • JWT Authentication                           │
└─────────────────────────────────────────────────┘
                        ▲
                        │
┌─────────────────────────────────────────────────┐
│                  Database Layer                  │
├─────────────────────────────────────────────────┤
│  • MongoDB for Data Storage                     │
│  • Mongoose for Data Modeling                   │
│  • Session Management                           │
└─────────────────────────────────────────────────┘
```

## 3. Real-time Communication Flow
```
┌─────────────┐    Draw Event    ┌─────────────┐
│  User 1     │─────────────────▶│  Server     │
└─────────────┘                  └─────────────┘
                                        │
                                        ▼
┌─────────────┐    Update Event  ┌─────────────┐
│  User 2     │◀────────────────│  Broadcast   │
└─────────────┘                  └─────────────┘
```

## 4. Authentication Flow
```
┌─────────────┐    Login Request  ┌─────────────┐
│   Client    │─────────────────▶│   Server    │
└─────────────┘                  └─────────────┘
                                        │
                                        ▼
┌─────────────┐    JWT Token     ┌─────────────┐
│   Client    │◀────────────────│  Generate   │
└─────────────┘                  └─────────────┘
        │                                │
        ▼                                ▼
┌─────────────┐                  ┌─────────────┐
│  Protected  │                  │  Session    │
│  Resources  │                  │  Storage    │
└─────────────┘                  └─────────────┘
```

## 5. Data Flow Architecture
```
┌─────────────┐    HTTP/WebSocket  ┌─────────────┐
│  Frontend   │◀─────────────────▶│  Backend    │
└─────────────┘                   └─────────────┘
                                        │
                                        ▼
┌─────────────┐    Database Ops   ┌─────────────┐
│  Backend    │◀─────────────────▶│  MongoDB    │
└─────────────┘                   └─────────────┘
```

## 6. Component Interaction
```
┌─────────────────┐     ┌─────────────────┐
│  Drawing Tools  │     │  Canvas Area    │
├─────────────────┤     ├─────────────────┤
│ • Pencil        │     │ • Drawing Layer │
│ • Eraser        │     │ • Grid System   │
│ • Shapes        │     │ • Zoom Controls │
└────────┬────────┘     └────────┬────────┘
         │                       │
         ▼                       ▼
┌─────────────────┐     ┌─────────────────┐
│  User Controls  │     │  Collaboration  │
├─────────────────┤     ├─────────────────┤
│ • Color Picker  │     │ • User List     │
│ • Size Slider   │     │ • Chat          │
│ • Tool Options  │     │ • Cursors       │
└─────────────────┘     └─────────────────┘
```

## 7. Database Schema
```
┌─────────────────┐     ┌─────────────────┐
│    Users        │     │    Boards       │
├─────────────────┤     ├─────────────────┤
│ • _id           │     │ • _id           │
│ • username      │     │ • name          │
│ • email         │     │ • createdBy     │
│ • passwordHash  │     │ • createdAt     │
└────────┬────────┘     └────────┬────────┘
         │                       │
         ▼                       ▼
┌─────────────────┐     ┌─────────────────┐
│    Sessions     │     │    Drawings     │
├─────────────────┤     ├─────────────────┤
│ • _id           │     │ • _id           │
│ • userId        │     │ • boardId       │
│ • token         │     │ • data          │
│ • expiresAt     │     │ • timestamp     │
└─────────────────┘     └─────────────────┘
```

## 8. Security Architecture
```
┌─────────────┐    HTTPS     ┌─────────────┐
│   Client    │─────────────▶│   Server    │
└─────────────┘             └─────────────┘
                                    │
                                    ▼
┌─────────────┐    JWT      ┌─────────────┐
│   Server    │─────────────▶│  Auth      │
└─────────────┘             └─────────────┘
                                    │
                                    ▼
┌─────────────┐    Session  ┌─────────────┐
│   Auth      │─────────────▶│  Database  │
└─────────────┘             └─────────────┘
```

## 9. Error Handling Flow
```
┌─────────────┐    Error     ┌─────────────┐
│   Client    │─────────────▶│   Server    │
└─────────────┘             └─────────────┘
                                    │
                                    ▼
┌─────────────┐    Log      ┌─────────────┐
│   Server    │─────────────▶│  Error     │
└─────────────┘             └─────────────┘
                                    │
                                    ▼
┌─────────────┐    Notify   ┌─────────────┐
│   Server    │─────────────▶│  Client    │
└─────────────┘             └─────────────┘
```

## 10. Deployment Architecture
```
┌─────────────────┐     ┌─────────────────┐
│  Static Files   │     │  Node.js App    │
├─────────────────┤     ├─────────────────┤
│ • HTML          │     │ • Express.js    │
│ • CSS           │     │ • Socket.IO     │
│ • JavaScript    │     │ • Auth          │
└────────┬────────┘     └────────┬────────┘
         │                       │
         ▼                       ▼
┌─────────────────┐     ┌─────────────────┐
│  Web Server     │     │  MongoDB        │
├─────────────────┤     ├─────────────────┤
│ • Nginx         │     │ • Database      │
│ • SSL           │     │ • Collections   │
└─────────────────┘     └─────────────────┘
``` 